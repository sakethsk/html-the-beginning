/* universal selector "*"(lowest priority) demo */
* {
    /* border-top: 5px double black; */
    margin: 0;
    padding: 0;
}
/*putting margin and padding to 0 in universal selector is called global reset*/ 
/* when you need some space inside of an element, which is very useful mostly when theres a backgroud color, we use padding */
/* when you need space outside of an element/between multiple elements, always use margin. incase you need to add vertical space, stick to margin-bottom */
/* for border styles mention 3 things for sure==> pixel size, border style, colour */
h1, 
h2, 
h3, 
h4, 
p, 
li{
    font-family: Arial, Helvetica, sans-serif;
    /* border-top: 5px solid black; */
    /* border-bottom: 5px solid black; */
}
aside h4{
    text-align: center;
}

body{
    color: #444;
    font-family: sans-serif;
    border-top: 10px solid cyan;
    margin: 0;
}

/* demo of padding and box models etc */
.container{
    width: 800px;
    /* margin-left: auto;
    margin-right: auto; */
    margin: 0 auto;
    position: relative;
    /* position:relative is used to fix a specific container in its own place and move relative to the element that is set in position:absolute */
}
.main-header{
    background-color: cyan;
    /*padding: 20px;
    padding-left: 40px;
    padding-right: 40px;*/
    padding: 20px 40px;/* this means, top&bottom has 20px padding and left&right has 40px padding same result as the comments above*/
    margin-bottom: 60px;
    
    /* height: 80px;   real height of this element isn't 80 as we specified, but the extra padding height as well so it's 120 */
}
nav{
    font-size: 15px;
}
article{
    margin-bottom: 60px;
}
.post-header{
    margin-bottom: 40px;
}
aside{
    background-color: aqua;
    border-top: 5px solid crimson;
    border-bottom: 5px double crimson;
    padding: 50px 0;

    width: 500px;
    
}

h1{
    color: rgb(6, 24, 142);
    font-size: 30px;
    
    text-transform: uppercase;
    font-style: italic;
    font-stretch: expanded;
    text-align: left;
  }

h2{
    color: rgb(109, 4, 4);
    font-size: 25px;
    text-transform: uppercase;
    margin-bottom:30px;
    position: relative;
}

h3{
    color: rgb(196, 143, 10);
    font-size: 20px;
    text-transform: uppercase;
    margin-bottom: 20px;
    margin-top: 40px;
}
/* collapsing margins- when 2 margins occupy the same common space, they do not get added up but they are integrated within eachother */
p{
    font-size: 20px;
    line-height: 1.3;
    margin-bottom: 20px;
}

ul,
ol{
    margin-left: 50px;
    margin-bottom: 30px;
}

li{
    font-size: 20px;
    margin-bottom: 10px;
}
li:last-child{
    margin-bottom: 0;
}

footer p{
    font-size: 10px;
}

/*article header p{
    font-style: italic;
}*/

#author{
    font-style: italic;
    
}

.related-auth{
    font-size: 18px;
    font-weight: bold;
}

/*ul{
    list-style: none;
}*/

.related{
    list-style: none;
}
/* when we want to style multiple unique elements, use classes  */
/* in the real world, always use "class" instead of "id" as it's just more work with "id" */


/* borders can be- dotted or wavy or dashed or double or many more */
body{
    background-color: silver;
    position: relative;
}

/* this is the method to bold specific common element in a list
these are called pseudo classes*/
li:first-child{
    font-weight: bold;
}

li:last-child{
    font-style: italic;
}

li:nth-child(2){
    color: rgb(20, 2, 121);
}

li:nth-child(odd){
    color: rgb(252, 3, 111);
}

article p:first-child{
    color: red;
}/* this isnt how a pseudo class works in css as the first child in "article" is header and not para*/ 

/* styling hyperlinks starts from here */
/* a:link targets hyperlinks with actual links and not empty or # */
a{
    color: red;
}
a:link{
    color: purple;
    text-decoration: none;
}
a:visited{
    color: chartreuse;
}
a:hover{
    color: orange;
    font-weight: bold;
    text-decoration: underline black;
}
a:active{
    background-color: black;
    font-style: italic;
}

nav a:link{
    background-color: rgb(255, 255, 255);
    /* margin: 20px;

    display: block;
    we can change inline elements to block elements using "display:block"
    we can make block level elements to inline elements using "display:inline" 
    an "display: inline-block" acts as an inline element that has its own space like a block element*/

    margin-right: 30px;
    margin-top: 10px;
    display: inline-block;
}
/* when an element gets styled in multiple ways,i.e, id or class or element selector(p,div,li,etc.) the priority is given as
0. declarations marked "!important"(highest priority and must be used in worst case)
1. inline style(style attribute in html file itself)
2. id
3. class
4. element selector
5.universal selector(*) */
/* this priority is only for resolving  */

.post-image{
    width: 100%;
    height: auto;
    /* the aspect ratio fixed in css overrides the ratio specified in html. "auto" can be used for dimensions already specified in html*/
}

/* priority choosing demonstration(!important has highest priority) */
#copyright{
    font-size: 12px;
    color: yellowgreen;
}

.copyright{
    color: tomato;
}

.text{
    color: chocolate;
}

footer p{
    color: blue !important;
}

.likebtn{
    font-size: 20px;
    cursor: pointer;
    padding: 15px;
    position: absolute;
    bottom: 50px;
    right: 50px;
    /* this is how an element is set in position:absolute. its done to keep an element fixed in a certain space */
}

/* pseudo classes are written as _____:<pseudoClass>, where as pseudo elements are written as _____::<pseudoElement */
h1::first-letter{
    font-style: normal;
    margin-right: 5px;
}
p::first-line{
    color: purple;
}
/* sibling element is an element which is in the same container as any other element. 
Adjacent sibling element is an element that is written right after a said element  */
h3 + p::first-line{
    color: cornflowerblue;
}

/*after pseudo element is the element after said element that doesn't require to be declared/mentioned in the html file  */
h2::after{
    content: "Luffy";
    background-color: palevioletred;
    font-size: 15px;
    color: black;
    font-weight: bold;
    /* by default any pseudo element is an inline element so before giving a padding, we need to render it as an inline block */
    display: inline-block;
    padding: 5px 10px;
    position: absolute;
    top: -10px;
    right: 100px;

}